---
- name: install tomcat on ubuntu 22
  hosts: all
  become: yes
  vars: 
    java_package_name: openjdk-11-jdk
    user_name: tomcat
    gropu_name: tomcat
    user_home: /opt/tomcat
    tomcat_version: "10.0.27"
    tomcat_major_version: "10"
    tomcat_service_name: tomcat.service
    user_shell: /bin/false
  tasks: 
    - name: install java
      ansible.builtin.apt:
        name: "{{ java_package_name }}"
        update_cache: true 
        state: present
    - name: create group
      ansible.builtin.group:
        name: "{{ gropu_name }}"
        state: present     
    - name: create a tomcat user
      ansible.builtin.user:
        name: "{{ user_name }}"
        create_home: yes
        group: "{{ gropu_name }}"
        home: "{{ user_home }}"
        shell: "{{ user_shell }}"
        state: present
    - name: "extract tomcat {{ tomcat_version }}"
      ansible.builtin.unarchive:
        src: "https://dlcdn.apache.org/tomcat/tomcat-{{ tomcat_major_version }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
        remote_src: yes
        dest: "{{ user_home }}"
    - name: link in the file
      ansible.builtin.file:
        src: "{{ user_home }}/apache-tomcat-{{ tomcat_version }}"
        path: "{{ user_home }}/latest"    
        owner: "{{ user_name }}"
        state: link
        mode: '0777'
    - name: chown
      ansible.builtin.file:
        dest: "{{ user_home }}"
        recurse: true
        group: "{{ gropu_name }}"
        owner: "{{ user_name }}"
        state: directory
        mode: '0777'
    - name: shell file
      ansible.builtin.command: "sudo sh -c 'chmod +x {{ user_home }}/latest/bin/*.sh'"
    - name: create tomcat service file
      ansible.builtin.copy:
        src: "{{ tomcat_service_name }}"
        dest: "/etc/systemd/system/{{ tomcat_service_name }}"
        owner: "{{ user_name }}"
        group: "{{ gropu_name }}" 
    - name: create systemd fiels
      ansible.builtin.systemd:
        name: "{{ tomcat_service_name }}"
        daemon_reload: true
        enabled: true
        state: restarted 
    - name: allowing tcp
      community.general.ufw:
        state: enabled
        policy: allow
    - name: copy the file into tomcat users xml file
      ansible.builtin.copy:
        src: tomcat-users.xml
        dest: "{{ user_home }}/latest/conf/tomcat-users.xml"    
        owner: "{{ user_name }}"
        group: "{{ gropu_name }}"
    - name: copy the manager app context file
      ansible.builtin.copy:
        src: context.xml
        dest: "{{ user_home }}/latest/webapps/manager/META-INF/context.xml"
        owner: "{{ user_name }}"
        group: "{{ gropu_name }}"
    - name: copy the host manager app context file
      ansible.builtin.copy:
        src: hostmanager-context.xml
        dest: "{{ user_home }}/latest/webapps/host-manager/META-INF/hostmanager-context.xml"
        owner: "{{ user_name }}"
        group: "{{ gropu_name }}"
    - name: create systemd files
      ansible.builtin.systemd:
        name: "{{ tomcat_service_name }}"
        daemon_reload: true
        enabled: true
        state: restarted          